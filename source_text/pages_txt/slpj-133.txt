132
Chapter 7 List Comprehensions
7.3 Translating List Comprehensions
The above rules provide a concise definition of list comprehensions. In this
section we will see that a very similar set of rules can be used to translate
Miranda list comprehensions into the enriched lambda calculus.
The translation requires one new function, flatMap. This is defined in
Miranda as follows:
flatMap f []
=[]
flatMap f (x:xs) = (f x) ++ (flatMap f xs)
That is, (flatMap f xs) applies a list-valued function f to each element of a list
xs, and then appends all the resulting lists together.
The rules for translation can be expressed by giving some extra rules for the
TE scheme, which was introduced in Chapter 3, and Figure 7.1 gives these
extra rules.
TE[ [E I V <- L; Q] ]
=flatMap, (Av . TE[ [E I Q] ]) TEE L I
G
TE[ [E | B; Q] ]
IF TE[ B ] TE[ [E ( Q] ] NIL
TE[ [E 1 ] ]
CONS TE[ E ] NIL
where E is an expression
B is a boolean-valued expression
L is a list-valued expression
Q is a sequence of zero or more qualifiers
v is a variable
Figure 7.1 Translation scheme for list comprehensions
It is not hard to see that rule (a), together with the definition of flatMap, is
equivalent to rules (1) and (2) of the preceding section. Similarly, rule (b) is
equivalent to rules (3) and (4), and rule (c) is equivalent to rule (5).
Here are two examples, showing how to compile comprehensions like those
used in the examples in the preceding section:
TE[ [square x 1 x <- xs; odd x] ]]
flatMap (Ax. TE[[ [square x | odd x] ]]) xs
(rule (a))
flatMap (Ax. IF (odd x) TE[[ [square x : ] ] NIL) xs
flatMap (Ax. IF (odd x) (CONS (square x) NIL) NIL) xs
(rule (b))
(rule (c))
TE[[ [(x,y) 1 x <- xs; y <- ys] ]
flatMap ( \x. TE[[ [(x,y) 1 y <- ys] I) xs
flatMap (Ax. flatMap (Ay. TEI[ [(x,y) | ] I) ys) xs
(rule (a))
flatMap (Ax. flatMap (Ay. CONS TE[[ (x,y) ]] NIL) ys) xs
(rule (a))
flatMap (Ax. flatMap (Ay. CONS (PAIR x y) NIL) ys) xs
(rule (c))
It is left as an exercise for the reader to evaluate the terms above (for some
suitable values of xs and ys) and verify that they return the desired results.
