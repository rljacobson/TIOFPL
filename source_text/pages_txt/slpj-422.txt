424
Chapter 24 Parallel Graph Reduction
When it is reduced, the top node will be overwritten with the result. However,
the lower two nodes are now known to be in WHNF, and can be marked as
such before they are popped from the stack.
The observations are closely related to those of Section 20.7, but seen from
a different perspective.
24.6 What is a Task?
When a task is not being executed by an agent it must be represented in some
way in store. There are, of course, all sorts of ways of representing a task, but
in this section we will explore some of them to reassure ourselves of the
feasibility of our ideas so far.
The representation of a task must contain all the information required to
continue executing the task from the point at which it was last suspended. In
conventional multitasking operating systems this representation is often
called a Task Control Block, and contains information such as
i) the task's stack pointer;
E
the task's program counter;
the state of the task's registers.
By contrast, in our parallel reduction model a task can, in principle, be
represented completely by a single pointer to the root of the graph it is
evaluating. The complete state of a partially completed task is held in the
graph, so that a pointer to the root of its graph suffices to represent a task at
any stage in its life (not only when it is newly sparked). At any stage an agent
can stop performing reductions on a task, put its root pointer back into the
task pool, and begin executing another task.
24.6.1 Pointer-Reversal
The only trouble with the very simple representation of a task that we have
described is that if a task is blocked and subsequently resumed, the agent has
to unwind down the spine of the graph from the root. One way to avoid this is
to use pointer-reversal.
In Chapter 11 we described how an evaluator could unwind the spine of an
expression without using a stack by reversing pointers in the spine as it went.
At first it appears that this is totally out of court in a parallel machine, since the
pointer-reversed graph is in a 'peculiar state' which will be incomprehensible
to other tasks.
However, pointer-reversal only reverses pointers in the vertebrae, and the
vertebrae are exactly the marked nodes. Hence, no other task will look inside a
pointer-reversed node, and it is quite safe to use this technique! The complete
