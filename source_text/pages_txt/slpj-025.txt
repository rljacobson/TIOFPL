24
Chapter 2 The Lambda Calculus
Not every expression has a normal form; consider for example
(D D)
where D is (\x.x x). The evaluation of this expression would not terminate
since (D D) reduces to (D D):
(AX.X x) (AX.X x) - (AX.X x) (Ax.X x)
(Ax.X x) (Ax.X x)
This situation corresponds directly to an imperative program going into an
infinite loop.
Furthermore, some reduction sequences may reach a normal form while
others do not. For example, consider
(AX.3) (D D)
If we first reduce the application of (1x.3) to (D D) (without evaluating (D D))
we get the result 3; but if we first reduce the application of D to D, we just get
(D D) again, and if we keep choosing the (D D) the evaluation will fail to
terminate.
2.3.1 Normal Order Reduction
These complications raise an embarrassing question: can two different
reduction sequences lead to different normal forms? Fortunately the answer
is 'no'. This is a consequence of a profound and powerful pair of theorems, the
Church-Rosser Theorems I and II, which save the day.
THEOREM
Church-Rosser Theorem I (CRT I)
If E1 <> E2, then there exists an expression E, such that
E1 - E and E2 - E
The following corollary is an easy consequence:
Corollary. No expression can be converted to two distinct normal forms
(that is, normal forms that are not @-convertible).
Proof. Suppose that E <, ErandE +, E2, where E1 and E2 are in normal
form. Then, E1 <> E2 and, by CRT I, there must exist an expression F,
such that E1 - F and E2 -> F. But Et and E2 have no redexes,
SO E1 = F = E2-
Informally, the corollary says that all reduction sequences which terminate
will reach the same result. The second Church-Rosser Theorem concerns a
particular reduction order, called normal order:
