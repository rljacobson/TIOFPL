Three
TRANSLATING A HIGH-LEVEL
FUNCTIONAL LANGUAGE INTO THE
LAMBDA CALCULUS
In the next few chapters we will describe how to translate a high-level
functional language into the lambda calculus.
We can regard this translation in two ways:
(i) As a description of the semantics of the language, giving the meaning of
each of its constructs in terms of lambda expressions, whose meaning is
well understood. This is precisely the approach taken by denotational
semantics [Gordon, 1979].
(ii) As a step in the implementation of the high-level language, by expressing
all its constructs in terms of the lambda notation.
For the sake of definiteness we use a subset of the language Miranda [Turner,
1985], but the techniques apply to any functional language. An introduction
to Miranda can be found in the Appendix.
Disclaimer
In this book Miranda is used as an example of a modern functional
programming language, to illustrate various points about the imple-
mentation of functional programming languages in general. This book is
Note that:
not intended to be a source of reference for the definition of Miranda.
(i) Miranda has a number of features, both major and minor, which are
not discussed here at all.
ii) The material about Miranda in this book was based on a prerelease
version of the Miranda system and may therefore be inaccurate by the
time it is published.
The Miranda functional programming system is a product of Research
Software Limited, and a full description of the language and its pro-
gramming environment is in preparation by them.
37
