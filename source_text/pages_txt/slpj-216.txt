216
Chapter 12 Graph Reduction of Lambda Expressions
The trouble with introducing indirection nodes is that they can then
appear at any point in the graph, so the reduction machine must contain
tests for indirection nodes in many places.
Furthermore there is a danger that long chains of indirection nodes
might build up (for example, suppose (f 6) evaluated to an indirection
node), which would clog up the machine.
The issue of whether to copy or to use indirection nodes arises in other cases
also. For example, HEAD selects the head of its argument (which it first
evaluates to a CONS cell), and meets the same problem in overwriting the root
of the redex with the result. IF is another example of such a function.
Functions like these which simply select some component of their
argument(s) are called projection functions.
All the arithmetic and boolean functions will suffer too in an unboxed
implementation, because their result is unboxed.
In general, any function whose result is not a cell constructed during the
reduction will raise the question of how to update the root.
12.4.3 Evaluating the Result before Updating
A solution which overcomes the major problems of either method is to
evaluate the result before updating the root of the redex. We can justify this
approach with the following two observations:
(i) We are currently trying to reduce node $ to weak head normal form. So
the first thing we are going to do once this reduction is complete is to
reduce the result of the reduction ((f 6) in this case) to WHNF.
Hence we can safely reduce node # to WHNF before overwriting node
$ with the result.
(ii) Once an expression is in WHNF its root is never again overwritten,
because it is never again selected as the root of a redex.
Observation (i) means that if the result of the reduction of node # was an
indirection to a CONS cell *, we could overwrite node $ with an indirection to
node * (not node #).
@$
reduces to
V $
AX
V#
Thus we would never get more than one indirection node in a chain.
Observation (ii) tells us that it is safe to copy node # once it is in WHNF
