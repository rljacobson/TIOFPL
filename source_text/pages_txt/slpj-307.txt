Section 18.5 Compiling a supercombinator definition
309
(iv) Now instantiate Eb, leaving a pointer to it on the stack.
(v) Lastly, squeeze out the pointers to the definition bodies. This is why the
SLIDE instruction has an argument, telling it how many elements to
squeeze out.
" Stack
After (iii )a
After (iii) b
Eb
After (iv)
After (v)
Figure 18.9 Execution of letrec x = f x in Eb
Figure 18.9 shows various stages in the execution of
C[[ letrec x = f x in Eb ]] p d
In symbols, we write:
CHI letrec D in Eb I p d
where
= CLetrec[[ D ] p' d'; CI[ E. I] p' d'; SLIDE (d'-d)
(p', d') = Xr[[ DI pd
follows.
This uses two new auxiliary functions CLetrec and Xr, which are defined as
CLetrec
X1 = Et
X2 = E2
p d = ALLOC n;
C [ E, ] p d; UPDATE n;
= Er
C [[ E2 ] pd; UPDATE n-1;
C [[ En I p d; UPDATE 1;
CLetrec performs the first two steps of the process. The 'ALLOC n' instruction
allocates n holes in the heap and pushes pointers to them onto the stack. Then
the instances of the definition bodies are constructed and the UPDATE
instruction overwrites a hole with the root of the corresponding instance.
Xr
X1 = E1
X2
Ez
pd= ( p x1=d+17 , d+n )
X2=d+2
..
Xn = En
Xn=d+n
