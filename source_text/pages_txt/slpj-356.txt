358
Chapter 20 Optimizations to the G-machine
B[ E ] pd
Evaluates E, leaving the result on top of the stack as a naked basic value.
BI[ ilpd
B[ NEG E ] p d
= PUSHBASIC i
BI + E1 E2 ] pd
= B[[ E ] pd; NEG
B[ IF Ec E: E: ] pd
= BI E2 ] p d; BI[ E: ] p (d+1); ADD
= B[ Ec I p d; JFALSE L1;
B[ Et ] p d; JUMP L2;
LABEL L1;
BI[ E: I pd;
B[[ let x=Ex in E ]] pd
LABEL L2
= C[ Ex ] pd;
B[[ letrec D in E ] p d
B[ E ] p[x=d+1] (d+1); SLIDE 1
= CLetrec [[ D ] p' d'; B[ E ] p' d'; SLIDE (d'-d)
where
BI E] pd
(p', d') = Xr [ D ] pd
= E[ E ] p d; GET (otherwise)
Figure 20.10 The B compilation scheme
R[ il ed
RI NEG E ] pd
= BI[ i ] p d; UPDINT (d+1); POP d; RETURN
RE + E1 E2 ] pd
=
B[ NEG E ] p d; UPDINT (d+1); POP d; RETURN
= B[ + E1 E2 ] pd;
RI IF Ec Et Er ] pd
UPDINT (d+1); POP d; RETURN
= BI[ Ec ] p d; JFALSE L;
R[ Et ] p d;
LABEL L; A[[ E: I p d
Similar modifications apply to the RS scheme.
Figure 20.11 Modifications to the R scheme to use B
E[ NEG E ] pd
E[ + E: E2 ] p d
= BI NEG E ]] p d; MKINT
E[ IF Ec E: Er ] pd
= BI[ + E: E2 ]] p d; MKINT
= B[ Ec ] p d; JFALSE L1;
E[[ E: ] p d; JUMP L2;
LABEL L1;
EI E: ] pd;
LABEL L2
Similar modifications apply to the ES scheme.
Figure 20.12 Modifications to the E scheme to use B
The extra instructions required are given in Figure 20.13.
The only remaining problem with this optimization concerns garbage
collection. When garbage collection is initiated, the garbage collector has to
traverse all the accessible graph, including that only accessible from the stack.
