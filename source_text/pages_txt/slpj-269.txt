Section 16.2 Optimizations to the SK scheme
269
For, applying (B p 1) to any argument x, we see
Bpix
- p (1 x)
p x
So we can use another optimization rule
Bpl =p
which optimizes our example further:
B -1 = -
This is a very good translation for (\x. - x), which is the same as that
obtained by 7-conversion. In fact the (B p () optimization is just n-conversion
in a new guise.
16.2.3 The C Combinator
Just as (B f g x) sends x into g but not f, so it is convenient to have a
combinator C, which sends x into f but not g, thus
Cfgx -> fxg
The optimization rule for C is
S p (K q) => Cpq
Figure 16.3 summarizes the extra reduction and optimization rules we have
developed so far. The validity of these rules can readily be proved using
extensional equality. For example:
S (K p) q x
Bp q x
K p x (q x)
P (q x)
- p (q x)
Hence S (K p) q = Bp q
Reduction rules
Bfgx -> f (g x)
Cfgx -> fxg
Optimization rules
S (K p) (K q) :
S (K p) !
K (p q)
S (K p) q
P
S p (K q)
Bpq
Cpq
Figure 16.3 B, C and K optimizations
