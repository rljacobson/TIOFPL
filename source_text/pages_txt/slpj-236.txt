236
Chapter 14 Recursive Supercombinators
As an example of a recursive function, consider the factorial function:
letrec fac = An. IF (= n 0) 1 (* n (fac (- n 1)))
in fac 4
The letrec is at level 0, and there are no lambda abstractions inside the body of
the An abstraction. Hence, fac is already a supercombinator and we get
$fac n = IF (= n 0) 1 (* n ($fac (- n 1)))
$Prog = $fac 4
$Prog
14.4 Generating Supercombinators with Graphical Bodies
So far none of our supercombinators has had a graphical body. This occurs
when a letrec has some free variables. Consider, for example, the program
let
Inf = Av . (letrec vs = CONS v vs in vs)
in
Inf 4
(Inf v) returns the infinite list of vs. Again, Inf is at level 0 and contains no inner
lambda abstractions, so it is already a supercombinator, and we get
$Inf v = letrec vs = CONS v vs in vs
$Prog = $Inf 4
$Prog
Notice that the graphical body of the supercombinator preserves the (finite)
cyclic representation of the (infinite) data structure.
14.5 An Example
We shall now work through an example to show the lambda-lifting algorithm
in action. Here is a Miranda program to sum the first 100 integers. It is written
