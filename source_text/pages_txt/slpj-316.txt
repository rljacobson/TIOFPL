318
Chapter 18 The G-machine
18.9 Summary
This chapter has presented the payoff for the hard work earlier in the book.
We have developed:
(i) a compilation algorithm which takes a supercombinator program and
compiles it into G-code;
(ii) G-code sequences for a representative range of built-in functions.
The next chapter completes the picture by giving a precise description of
G-code and a discussion on how to implement it.
References
Augustsson, L. 1984. A compiler for lazy ML. In Proceedings of the ACM Symposium
on Lisp and Functional Programming, Austin, pp. 218-27, August.
Burstall, R.M., MacQueen, D.B., and Sanella, D.T. 1980. HOPE: an experimental
applicative language. In Proceedings of the ACM Lisp Conference, pp. 136-43,
August.
Clark, R. (editor) 1981. UCSD P-system and UCSD Pascal Users' Manual, 2nd
edition. Softech Microsystems, San Diego.
Elworthy, D. 1985. Implementing a Ponder cross compiler for the SKIM processor.
Dip. Comp. Sci. Dissertation, Computer Lab., Cambridge. July.
Fairbairn, J. 1982. Ponder and its type system. Technical Report 31. Computer Lab.,
Cambridge. November.
Fairbairn, J. 1985. Design and implementation of a simple typed language based on the
lambda calculus. Technical Report 75. Computer Lab., Cambridge. May.
Fairbairn, J., and Wray, S.C. 1986. Code generation techniques for functional
languages. In Proceedings of the ACM Conference on Lisp and Functional
Programming, Boston, pp. 94-104, August.
Field, A. 1985. The Compilation of FPIM Programs into Conventional Machine Code.
Dept Comp. Sci., Imperial College. June.
Griss, M.L., and Hearn, A.C. 1981. A portable Lisp compiler. Software - Practice and
Experience. Vol. 11, pp. 541-605.
Hudak, P., and Kranz, D. 1984. A combinator based compiler for a functional
language. In Proceedings of the 11th ACM Symposium on Principles of
Programming Languages, pp. 122-32, January.
Johnsson, T. 1984. Efficient compilation of lazy evaluation. In Proceedings of the ACM
Conference on Compiler Construction, Montreal, pp. 58-69, June.
Lester, D. 1985. The correctness of a G-machine compiler. MSc dissertation,
Programming Research Group, Oxford. December.
Rees, J.A., and Adams, N.I. 1982. T- a dialect of LISP. In Proceedings of the ACM
Symposium on Lisp and Functional Programming, pp. 114-22, August.
Richards, M. 1971. The portability of the BCPL compiler. Software - Practice and
Experience. Vol. 1, no. 2, pp. 135-46.
Steele, G.L., and Sussman, G.J. 1978. The Revised Report on Scheme. Al Memo 452,
MIT. January.
