102
Chapter 5 Efficient Compilation of Pattern-matching
(iii) The resulting expressions may contain I and FAIL. Implementing such
expressions efficiently requires additional simplification rules and/or a
special way of implementing FAIL using jump instructions (see Section
5.4.2).
The result is that the pattern-matching compiler must be significantly more
complicated if it is to deal with non-uniform expressions. Further, the first
point above means that it may be difficult to know how efficient the code
compiled for a non-uniform definition will be.
An issue related to uniformity is the way conditionals are handled. In
languages such as SASL, conditional expressions and where expressions may
appear anywhere in an expression, and the semantics of each is defined
independently. In Miranda, conditions and where clauses are not separate
expressions, but rather must be associated with the right-hand side of
definitions. This increases the power of Miranda, in some ways, but only when
non-uniform definitions are used. Hence, a restriction to uniform equations
would also allow this part of the language to be simplified.
On the other hand, it should be pointed out that non-uniform definitions
are sometimes very convenient. For example, the following definition
reverses lists of length two, and leaves all other lists the same:
reverseTwo [x,y] = [y,x]
reverseTwo xs
= XS
The most straightforward way of rewriting this as a uniform definition is much
more long-winded:
reverseTwo []
=
[]
reverseTwo [x]
=
[x]
reverseTwo [x,y]
= [y,x]
reverseTwo (x:y:z:ws) = x:y:z:ws
In this case, it is easy to see another way of rewriting reverseTwo, but, in
general, rewriting may not be so easy.
Functional language designers have long debated whether or not
definitions with overlapping equations should be allowed in functional
languages. As has been shown, it may be more appropriate to debate the
merits of uniform - as opposed to non-overlapping - equations. Several
arguments in favor of restricting definitions to uniform equations have been
raised here; but it is also true that non-uniform definitions are on occasion
quite convenient. No doubt the debate will continue to be a lively one.
Acknowledgements: For help with my work on chapters 4, 5 and 7 I would like to
thank the following. Simon Finn made valuable comments, both detailed and deep.
Simon Peyton Jones and I are listed as co-authors only on Chapter 4, but he has
provided as much thoughtful help as a co-author on the other chapters as well. For help
of a very different nature, I thank Catherine Lyons.
This work was performed while on a research fellowship supported by ICL.
