414
Chapter 24 Parallel Graph Reduction
Each evaluator task is busy reducing some particular subgraph to WHNF; the
task terminates when its subgraph reaches WHNF.
During its execution, a task may anticipate that it will require the value of a
certain subgraph at some future time. In this case it may generate a new task
to evaluate the subgraph in parallel by sparking the root node of the subgraph.
(The term 'sparking' is intended to convey the idea of 'setting a match' to a
subgraph, which ignites a processor evaluation which spreads through the
subgraph autonomously.) The new (child) task will evaluate the graph rooted
at the sparked node to WHNF, concurrently with the continued execution of
the (parent) task that sparked it.
If the parent needs the value of the subgraph before the child has completed
its evaluation, the parent becomes blocked until the child terminates. A task
may also become blocked because a sibling task is evaluating a subgraph
which the two tasks share. Mechanisms for implementing blocking are
discussed below.
Synchronization between tasks is mediated entirely through the graph, so
that the tasks do not communicate directly with each other at all. When
performing a reduction a task overwrites the root of the redex with the result
in a single indivisible operation, so that the reduction appears to all the other
tasks to take place instantaneously. Thus the graph never appears in an
intermediate state.
A task is executed by an agent. Typically an agent will be implemented by a
physical processor. Agents are concrete pieces of hardware (we can point to
one!), whereas a task is a virtual object (a piece of work to be done). An agent
is employed if it is executing a task. An unemployed agent will look for a task
to execute in the task pool which contains all the tasks awaiting execution.
of issues:
Logically, the machine looks like Figure 24.1. This model raises a number
(i) Logical issues, concerning the management of parallelism. The
particular issues we discuss are
(a) When are nodes sparked to create new tasks?
(b) What happens if two tasks start evaluating the same piece of graph?
Agent
Agent
Agent
Communications medium
Graph
Task pool
Figure 24.1 Logical structure of a parallel graph reduction machine
