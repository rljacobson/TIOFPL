378
Chapter 21 Optimizing Generalized Tail Calls
stack and code pointers first). The rule for CALL is therefore rather straight-
forward:
<f:n1:n2:. . .:nk:T:S, G, CALL k:C, D>
<f:n1:n2:. . .:nk:T: [], G, DISPATCH k:[], (S,C):D>
Uses of CALL can be optimized by a peephole optimizer in much the same
way as DISPATCH, except that even more opportunities for optimization are
available. For example, the sequence
PUSHGLOBAL $H; CALL k
where $H takes more than k arguments, can be optimized to
PUSHGLOBAL $H; MKAP k; SLIDE 1
Previously, an EVAL would have taken place at the end of the code sequence
EI[ $H E1 ... Ex Ipd
(see Figure 20.17). Now, however, the peephole optimizer can spot that no
EVAL is needed, which gives an important improvement to the optimizations
of Section 20.6.
21.5 Comparison with Environment-based Implementations
We have concentrated in this chapter on avoiding allocating nodes on the
spine wherever possible. To the extent to which we have been successful,
the G-machine now shows a remarkable similarity to environment-based
implementations.
In this section we will make a brief comparison of our final G-machine with
Cardelli's Functional Abstract Machine (FAM) [Cardelli, 1983 and 1984].
The FAM is based on delayed substitution in which function application is
carried out not by constructing an instance of the body of the function, but
rather by evaluating the body of the function in an environment in which the
formal parameters are bound to their actual values. The environment is a data
structure which holds the values of all the variables currently in scope. If the
result of evaluating the function is itself a function, then a closure is returned,
which is a pair consisting of
(ii)
(i) the code of the function;
the environment in which it should subsequently be executed.
This is the approach of the SECD machine, and the FAM can be considered as
an optimized SECD machine:
(i) The SECD machine code is often implemented by direct interpretation
of the abstract machine code. The FAM has a more powerful abstract
machine code, and is compiled to a target machine code (VAX).
