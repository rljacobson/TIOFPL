394
Chapter 22 Strictness Analysis
$Dummy1 is strict in e if and only if the expression ($G P Q) is strict in P, and
similarly for $Dummy2.)
One other point of interest occurs when analyzing a definition such as
$F x y = . . .($G E y). . .
where the formal parameters of the definition occur in the subexpression
being analyzed. In order to compute strictness in E we evaluate ($G# 0 y#);
but what value should we use for y#? The analysis we are performing should
hold for any application of $F, so we should use 1 for y#, which reflects our
lack of information about its value. If the type of the parameter is a function,
then we replace occurrences of it with the top of the corresponding abstract
function space.
22.5.3 Why Both Annotations Are Needed
It may now seem that the information provided by annotating application
nodes is always superior to that provided by annotating function definitions,
since the former is able to take advantage of contextual information.
definition also.
However, there are two reasons why it is important to annotate the function
The first is that the optimization of Section 20.6 requires annotations on the
function definition, so that it can compile the best possible code for the
function, which is nevertheless applicable in all possible contexts.
24.4.1.
The second reason concerns parallel evaluation, and is explained in Section
22.5.4 Summary
in summary, we should annotate both the formal parameters of a super-
combinator definition and each application node of a supercombinator body.
These two forms of annotation are complementary, and neither can be
omitted without loss.
Annotation is carried out by performing evaluations in the abstract
domain, using the abstract versions of the supercombinators.
It turns out that precisely the same annotations are needed for parallel
machines (see Chapter 24).
References
Burn, G., Hankin, C.L., and Abramsky, S. 1985. Strictness analysis of higher order
functions. Science of Computer Programming (to appear); also DoC 85/6, Dept
Comp. Sci., Imperial College, London. April.
Clack, C.D., and Peyton Jones, S.L. 1985. Strictness analysis - a practical approach. In
