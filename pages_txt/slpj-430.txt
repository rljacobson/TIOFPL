432
Appendix
Miranda is, by design, rather terse. There are no mandatory type declarations,
although (see later) the language is strongly typed. There are no semicolons at the end
of definitions - the parsing algorithm makes intelligent use of layout. Note that the
notation for function application is simply juxtaposition, as in sq x. In the definition of
the sq function, n is a formal parameter - its scope is limited to the equation in which it
scope).
occurs (whereas the other names introduced above have the whole script for their
Certain basic data types are built into the language; these are numbers, characters
and truth values. There are two kinds of built-in data structure, called lists and tuples.
The most commonly used data structure is the list, which in Miranda is written with
square brackets and commas, e.g.:
week_days = ["Mon","Tue","Wed","Thur", "Fri"]
days = week days ++ ['Sat","Sun"]
In fact a string is just a list of characters, so writing e.g. "Mon" is equivalent to writing
the list ['M','o','n']. Lists may be appended by the ++ operator.
Other useful operations on lists include infix : which prefixes an element to the front
of a list, # which takes the length of a list, and infix ! which does subscripting. So, for
example, 0:[1,2,3] has the value [0,1,2,3], #days is 7, and days10 is "Mon".
There is also an operator -- which does list subtraction. For example
[1,2,3,4,5] - [2,4] is [1,3,5].
There is a shorthand notation using . . for lists whose elements form an arithmetic
series. Here, for example, are definitions of the factorial function, and of a number
result which is the sum of the squares of the odd numbers between 1 and 100 (sum and
product are library functions, which add together and multiply, respectively, the
elements of a list):
fac n = product [1. .n]
result = sum [1,3. . 100]
The elements of a list must all be of the same type. A sequence of elements of mixed
type is called a tuple, and is written using parentheses instead of square brackets. For
example:
employee = ("Jones", True,False, 39)
Tuples are analogous to records in Pascal (whereas lists are analogous to arrays).
Tuples cannot be subscripted - their elements are extracted by pattern-matching (see
below)-
Guarded Equations and Block Structure
An equation can have several alternative right-hand sides distinguished by 'guards' (a
guard is a boolean expression written following a comma). So, for example, the
greatest common divisor function can be written:
god a b = god (a-b) b, a>b
god a (b-a), a<b
= a, a=b
The semantics specifies that the guards are tested in order, from top to bottom, but it is
probably bad style to write code which takes advantage of this. It is best to have a set of
guards which are mutually exclusive, as above, so that the order in which the cases are
written is not relevant. The keyword otherwise may be used as the last guard, indicating
