168
Chapter 9 A Type-checker
Note that if phi is idempotent, and phi moves tvn, then
sub_type phi (VAR tvn)
is a fixed point of phi, and hence cannot contain tvn.
9.4.2 Unification
In this section we will show how to construct a substitution which solves a
given set of type equations, using a process called unification.
A system of type equations can be represented by a list of pairs of type
expressions, where each pair (t1,t2) represents the equation
t1 = t2
To solve the equations, we have to find a substitution phi which unifies the left-
and right-hand sides of all equations in the system, where phi unifies the pair
(t1,t2) if
sub_type phi ti = sub_type phi t2
If this equation holds, phi is said to be a unifier of ti and t2. If phi is a unifier of
each pair in the list representing a set of equations, we may think then of phi as
a simultaneous solution of the equations.
If the substitution phi solves a system of equations, then clearly any
substitution psi' of the form (psi $scomp phi) is also a solution, but phi will
usually be a more general solution than psi'. A substitution phi is no less
general than a substitution psi if there is a substitution rho such that
psi = rho $scomp phi
If such an equation holds, then psi is said to be an extension of phi.
If we have constructed a solution phi of a system of type equations, and we
have done no more than is necessary to satisfy the equations, we will have a
solution which is maximally general, in the sense that it is no less general than
any other solution.
For an example (in informal terms), consider the type expressions
T1 = (A -> B) -> C
T2 = (B -> A) -> (A -> B)
The substitutions phil and phi2, where
phit A = B, phil C = (B -> B)
phi2 B = A, phi2 C = (A -> A)
are both unifiers of T1 and T2. In fact, they are examples of maximally general
unifiers: they each do (one version of) the minimum necessary to make T1 and
T2 equal, so that any other unifier of Ti and T2 is an extension of each of them.
