126
Chapter 6 Transforming the Enriched Lambda Calculus
6.5 Summary
In this chapter we have seen how to transform all the constructs of the
enriched lambda calculus into the ordinary lambda calculus, using Y to
express recursion. This is the method we will assume for the early implemen
tations of Part II.
In addition, we have seen that it is also possible to transform the program
into the ordinary lambda calculus augmented with simple lets and letrecs. This
is essential for type-checking, though it can be transformed into the ordinary
lambda calculus after that, but the use of let and letrec makes it easier for later
parts of the compiler to produce more efficient code. Subsequent implemen
exclusively.
tations, from Chapter 14 onwards, will therefore use the latter form
References
Aho, A.V., Hopcroft, J.E., and Ullman, D. 1974. The Design and Analysis of
Computer Algorithms, pp. 189-95. Addison Wesley.
Aho, A. V., Hopcroft, J.E., and Ullman, D. 1983a. Data Structures and Algorithms,
pp. 222-6. Addison Wesley.
Aho, A. V., Hopcroft, J.E., and Ullman, D. 1983b. Data Structures and Algorithms,
pp. 221-2. Addison Wesley.
Dijkstra, E. W. 1976. A Discipline of Programming, pp. 192-200. Prentice Hall.
